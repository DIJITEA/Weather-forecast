{"version":3,"sources":["assets/icons/16/chevron-bottom.svg","elements/forms/City-form.tsx","assets/Placeholder/Academy-Weather-bg160.svg","assets/icons/24/chevron-left.svg","elements/forms/Main-output.tsx","elements/forms/City-Date-form.tsx","elements/forms/Main-output-past.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["items","id","value","lat","lon","CityForm","props","CityState","e","item","a","preventDefault","fetch","apiUrl","json","data","setState","city","state","test","CityOpen","iconActive","bodyActive","render","className","onClick","src","Arrow","alt","map","type","liActive","React","Component","weatherItems","MainOutput","weatherOutputDisplay","undefined","weatherProp","ids","display","defDisplay","weatherDisplay","nextItem","iCount","i","prevItem","weatherOutput","wData","prevLa","elementDate","daily","date","Date","dt","temp","day","getDate","toString","getMonth","getFullYear","placeholder","arrow","itemTimeData","time","CityDateForm","setTime","target","getTime","CityStateSet","sendPrev","onChange","MainOutputPast","current","App","weather","console","log","elements","weatherDataRender","weatherDataTest","weatherDataPrev","this","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.eb4e95d0.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/chevron-bottom.a5408ea9.svg\";","import React from 'react'\nimport Arrow from '../../assets/icons/16/chevron-bottom.svg'\nimport './City-form.css'\ninterface CityFormProps {\n  city: string;\n  test?: any;\n}\ninterface CityFormState {\n  city: string;\n  iconActive: string;\n  bodyActive: string;\n  liActive: string;\n  test?: any;\n}\nconst WeatherApiKey = 'd511c25aa2df6ef291f23303b36bbcb2'\nconst items = [\n  {\n    id: 1,\n    value: 'Saratov',\n    lat: 51.533557,\n    lon: 46.034257\n  },\n  {\n    id: 2,\n    value: 'Samara',\n    lat: 53.195873,\n    lon: 50.100193\n  },\n  {\n    id: 3,\n    value: 'Tolyatti',\n    lat: 53.507836,\n    lon: 49.420393\n  },\n  {\n    id: 4,\n    value: 'Kazan',\n    lat: 55.796127,\n    lon: 49.106405\n  },\n  {\n    id: 5,\n    value: 'Krasnodar',\n    lat: 45.035470,\n    lon: 38.975313\n  }\n]\n\nclass CityForm extends React.Component<CityFormProps, CityFormState> {\n  constructor (props: CityFormProps) {\n    super(props)\n    this.state = { city: 'Select city', iconActive: '', bodyActive: '', liActive: '', test: this.props.test }\n  }\n\n  CityState = async (e?: any, item?: any) => {\n    e.preventDefault()\n    const apiUrl = await\n    fetch(`https://api.openweathermap.org/data/2.5/onecall?lat=${item.lat}&lon=${item.lon}&units=metric&exclude=current&appid=${WeatherApiKey}`)\n    const data = await apiUrl.json()\n    this.setState({ city: item.value })\n    this.state.test(data)\n    this.CityOpen()\n  }\n\n  CityOpen = (): void => {\n    if (this.state.iconActive === '') {\n      this.setState({ iconActive: 'select__icon--active', bodyActive: 'select__body--active' })\n    } else {\n      this.setState({ iconActive: '', bodyActive: '' })\n    }\n  }\n\n  render = () => (\n    <form>\n      <div className=\"select\">\n        <div className=\"select__header-container\"\n          onClick={() => this.CityOpen()}\n        >\n          <span className=\"select__header\">{this.state.city}</span>\n          <img className={'select__icon' + ' ' + this.state.iconActive} src={Arrow} alt=\"arrow\" />\n        </div>\n        <ul className={'select__body' + ' ' + this.state.bodyActive}>\n          {items.map(item => (\n            <li key={item.id}>\n              <button className=\"select__li-button\" type=\"button\" onClick={ (e) => this.CityState(e, item)}>\n                <span className=\"select__li-span\">{item.value}</span>\n              </button>\n            </li>\n          ))}\n        </ul>\n      </div>\n\n    </form>\n  )\n}\n\nexport default CityForm\n","export default __webpack_public_path__ + \"static/media/Academy-Weather-bg160.1a743710.svg\";","export default __webpack_public_path__ + \"static/media/chevron-left.668da982.svg\";","import React from 'react'\nimport placeholder from '../../assets/Placeholder/Academy-Weather-bg160.svg'\nimport arrow from '../../assets/icons/24/chevron-left.svg'\nimport './Main-output.css'\n\nconst weatherItems = [{ id: 0 }, { id: 1 }, { id: 2 }, { id: 3 }, { id: 4 }, { id: 5 }, { id: 6 }]\n\ninterface WeatherElProps {\n    weatherProp?: any\n}\ninterface WeatherElState {\n    display?:any\n    i?: any\n    elementDate?: any\n    prevLa?: any\n}\n\nclass MainOutput extends React.Component<WeatherElProps, WeatherElState> {\n  constructor (props: WeatherElProps) {\n    super(props)\n    this.state = { elementDate: [{ date: 'undefined', temp: 'undefined' }, { date: 'undefined', temp: 'undefined' }, { date: 'undefined', temp: 'undefined' }, { date: 'undefined', temp: 'undefined' }, { date: 'undefined', temp: 'undefined' }, { date: 'undefined', temp: 'undefined' }, { date: 'undefined', temp: 'undefined' }], prevLa: 'undefined', i: 0, display: { defDisplay: 'undefined', weatherDisplay: 'weather-block--non-active' } }\n  }\n\n  weatherOutputDisplay = () => {\n    const wData = this.props.weatherProp\n    if (wData !== undefined) {\n      const ids = { ...this.state.display }\n      if (this.state.display.defDisplay === 'undefined') {\n        ids.defDisplay = 'default--nonactive'\n        ids.weatherDisplay = ''\n        this.setState({ display: ids })\n      }\n    }\n  }\n\n  nextItem = () => {\n    const iCount = this.state.i\n    if (iCount !== 736) {\n      this.setState({ i: iCount + 184 })\n    } else {\n      this.setState({ i: 0 })\n    }\n  }\n\n  prevItem = () => {\n    const iCount = this.state.i\n    if (iCount !== 0) {\n      this.setState({ i: iCount - 184 })\n    } else {\n      this.setState({ i: 736 })\n    }\n  }\n\n    weatherOutput = (item?: any) => {\n      const wData = this.props.weatherProp\n      if (wData !== undefined) {\n        if (wData.lat !== this.state.prevLa) {\n          this.setState({ prevLa: wData.lat })\n          const ids = [...this.state.elementDate]\n          if (wData.daily !== undefined) {\n            const monthNames = ['jan', 'feb', 'mar', 'apr', 'may', 'june', 'july', 'aug', 'sept', 'oct', 'nov', 'dec']\n            const date = new Date(wData.daily[item.id].dt * 1000)\n            const temp = wData.daily[item.id].temp.day\n            ids[item.id].date = date.getDate().toString() + ' ' + monthNames[date.getMonth()] + ' ' + date.getFullYear().toString()\n            if (temp > 0) {\n              ids[item.id].temp = '+' + temp + '°'\n            } else if (temp === 0) {\n              ids[item.id].temp = temp + '°'\n            } else {\n              ids[item.id].temp = '-' + temp + '°'\n            }\n          }\n          this.setState({ elementDate: ids })\n        }\n      }\n    }\n\n    render = () => (\n        <div className=\"output\">\n          {this.weatherOutputDisplay()}\n            <div className={'default' + ' ' + this.state.display.defDisplay }>\n                <div className=\"default__container\">\n                    <img src={placeholder} className=\"default__placeholder\" alt=\"placeholder\" />\n                    <p className=\"default__p\">Fill in all the fields and the weather will be displayed</p>\n                </div>\n            </div>\n            <div className={'weather-block' + ' ' + this.state.display.weatherDisplay}>\n                <div className=\"weather-block__container\">\n                 <button className=\"weather-block__arrow-button\" onClick = {() => this.prevItem()}>\n                    <img className=\"weather-block__arrow-left\" src={arrow}></img>\n                 </button>\n                     <div className=\"weather-block__output-container\">\n                       <div className={'weather-block__items-container' + ' ' + 'weather-block__items-container--' + this.state.i + 'px'}>\n                         {weatherItems.map(item => (\n                             <form key={item.id} className=\"weather-block__item\" >\n                                 {this.weatherOutput(item)}\n                                 <span className=\"weather-block__item-date-span\">{this.state.elementDate[item.id].date}</span>\n                                 <span className=\"weather-block__item-temp-span\">{this.state.elementDate[item.id].temp}</span>\n                             </form>\n                         ))}\n                       </div>\n                      </div>\n                      <button className=\"weather-block__arrow-button\" onClick = {() => this.nextItem()}>\n                       <img className=\"weather-block__arrow-right\" src={arrow}/>\n                      </button>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default MainOutput\n","import React from 'react'\nimport Arrow from '../../assets/icons/16/chevron-bottom.svg'\nimport './City-Date-form.css'\ninterface CityFormProps {\n  city: string;\n  sendPrev?: any;\n}\ninterface CityFormState {\n  city: string;\n  iconActive: string;\n  bodyActive: string;\n  liActive: string;\n  sendPrev?: any;\n  time?:any;\n  e?: any;\n  item?: any;\n}\nconst WeatherApiKey = 'd511c25aa2df6ef291f23303b36bbcb2'\nconst items = [\n  {\n    id: 1,\n    value: 'Saratov',\n    lat: 51.533557,\n    lon: 46.034257\n  },\n  {\n    id: 2,\n    value: 'Samara',\n    lat: 53.195873,\n    lon: 50.100193\n  },\n  {\n    id: 3,\n    value: 'Tolyatti',\n    lat: 53.507836,\n    lon: 49.420393\n  },\n  {\n    id: 4,\n    value: 'Kazan',\n    lat: 55.796127,\n    lon: 49.106405\n  },\n  {\n    id: 5,\n    value: 'Krasnodar',\n    lat: 45.035470,\n    lon: 38.975313\n  }\n]\n\nconst itemTimeData = {\n  lat: 0,\n  lon: 0,\n  time: 0\n}\n\nclass CityDateForm extends React.Component<CityFormProps, CityFormState> {\n  constructor (props: CityFormProps) {\n    super(props)\n    this.state = { city: 'Select city', iconActive: '', bodyActive: '', liActive: '', time: 0, e: 0, item: 0, sendPrev: this.props.sendPrev }\n  }\n\n  setTime = (e?: any) => {\n    const date = new Date(e.target.value).getTime() / 1000\n    itemTimeData.time = date\n    this.setState({ time: date })\n    this.CityState()\n  }\n\n  CityStateSet = async (e?: any, item?: any) => {\n    e.preventDefault()\n    itemTimeData.lat = item.lat\n    itemTimeData.lon = item.lon\n    this.setState({ city: item.value })\n    this.CityOpen()\n    this.CityState()\n  }\n\n  CityState = async () => {\n    if (itemTimeData.lat !== 0 && itemTimeData.time !== 0) {\n      const apiUrl = await\n      fetch(`https://api.openweathermap.org/data/2.5/onecall/timemachine?lat=${itemTimeData.lat}&lon=${itemTimeData.lon}&units=metric&dt=${itemTimeData.time}&appid=${WeatherApiKey}`)\n      const data = await apiUrl.json()\n      this.state.sendPrev(data)\n    }\n  }\n\n  CityOpen = (): void => {\n    if (this.state.iconActive === '') {\n      this.setState({ iconActive: 'select__icon--active', bodyActive: 'select__body--active' })\n    } else {\n      this.setState({ iconActive: '', bodyActive: '' })\n    }\n  }\n\n  render = () => (\n    <form className=\"form\">\n      <div className=\"select\">\n        <div className=\"select__header-container\"\n          onClick={() => this.CityOpen()}\n        >\n          <span className=\"select__header\">{this.state.city}</span>\n          <img className={'select__icon' + ' ' + this.state.iconActive} src={Arrow} alt=\"arrow\" />\n        </div>\n        <ul className={'select__body' + ' ' + this.state.bodyActive}>\n          {items.map(item => (\n            <li key={item.id}>\n              <button className=\"select__li-button\" type=\"button\" onClick={ (e) => this.CityStateSet(e, item)}>\n                <span className=\"select__li-span\">{item.value}</span>\n              </button>\n            </li>\n          ))}\n        </ul>\n      </div>\n      <div className=\"form__input-date\">\n          <input id=\"date\" type=\"date\" onChange={ (e) => this.setTime(e)}></input>\n     </div>\n\n    </form>\n  )\n}\n\nexport default CityDateForm\n","import React from 'react'\nimport placeholder from '../../assets/Placeholder/Academy-Weather-bg160.svg'\nimport './Main-output-past.css'\n\ninterface WeatherElProps {\n    weatherProp?: any\n}\ninterface WeatherElState {\n    display?:any\n    i?: any\n    elementDate?: any\n    prevLa?: any\n}\n\nclass MainOutputPast extends React.Component<WeatherElProps, WeatherElState> {\n  constructor (props: WeatherElProps) {\n    super(props)\n    this.state = { elementDate: { date: 'undefined', temp: 'undefined' }, prevLa: 'undefined', i: 0, display: { defDisplay: 'undefined', weatherDisplay: 'weather-block--non-active' } }\n  }\n\n  weatherOutputDisplay = () => {\n    const wData = this.props.weatherProp\n    if (wData !== undefined) {\n      const ids = { ...this.state.display }\n      if (this.state.display.defDisplay === 'undefined') {\n        ids.defDisplay = 'default--nonactive'\n        ids.weatherDisplay = ''\n        this.setState({ display: ids })\n      }\n    }\n  }\n\n    weatherOutput = () => {\n      const wData = this.props.weatherProp\n      if (wData !== undefined) {\n        if (wData.lat !== this.state.prevLa) {\n          this.setState({ prevLa: wData.lat })\n          const ids = this.state.elementDate\n          if (wData.current !== undefined) {\n            const monthNames = ['jan', 'feb', 'mar', 'apr', 'may', 'june', 'july', 'aug', 'sept', 'oct', 'nov', 'dec']\n            const date = new Date(wData.current.dt * 1000)\n            const temp = wData.current.temp\n            ids.date = date.getDate().toString() + ' ' + monthNames[date.getMonth()] + ' ' + date.getFullYear().toString()\n            if (temp > 0) {\n              ids.temp = '+' + temp + '°'\n            } else if (temp === 0) {\n              ids.temp = temp + '°'\n            } else {\n              ids.temp = '-' + temp + '°'\n            }\n          }\n          this.setState({ elementDate: ids })\n        }\n      }\n    }\n\n    render = () => (\n        <div className=\"output\">\n          {this.weatherOutputDisplay()}\n            <div className={'default' + ' ' + this.state.display.defDisplay }>\n                <div className=\"default__container\">\n                    <img src={placeholder} className=\"default__placeholder\" alt=\"placeholder\" />\n                    <p className=\"default__p\">Fill in all the fields and the weather will be displayed</p>\n                </div>\n            </div>\n            <div className={'weather-block' + ' ' + this.state.display.weatherDisplay}>\n                <div className=\"weather-block__container-for-single\">\n                        <div className=\"weather-block__output-container\">\n                             <form className=\"weather-block__item\" >\n                                 {this.weatherOutput()}\n                                 <span className=\"weather-block__item-date-span\">{this.state.elementDate.date}</span>\n                                 <span className=\"weather-block__item-temp-span\">{this.state.elementDate.temp}</span>\n                             </form>\n                        </div>\n                  </div>\n            </div>\n        </div>\n    )\n}\n\nexport default MainOutputPast\n","import React from 'react'\nimport CityForm from './elements/forms/City-form'\nimport MainOutput from './elements/forms/Main-output'\nimport CityDateForm from './elements/forms/City-Date-form'\nimport MainOutputPast from './elements/forms/Main-output-past'\n\n// import logo from './logo.svg'\n// import testlogo from './assets/Placeholder/Academy-Weather-bg160.png'\nimport './App.css'\n// import { render } from '@testing-library/react'\n\nconst WeatherApiKey = 'd511c25aa2df6ef291f23303b36bbcb2'\n// let weatherData = 'undefined'\ninterface AppProps{\n\n}\ninterface AppState {\n  weatherDataTest?: any\n  weatherDataPrev?: any\n}\n\nclass App extends React.Component<AppProps, AppState> {\n  constructor (props: AppProps) {\n    super(props)\n    this.state = { weatherDataTest: undefined, weatherDataPrev: undefined }\n  }\n\n  weather = async (e?: any) => {\n    e.preventDefault()\n    const apiUrl = await\n    fetch(`https://api.openweathermap.org/data/2.5/onecall?lat=33.44&lon=-94.04&exclude=current&appid=${WeatherApiKey}`)\n    const data = await apiUrl.json()\n    console.log(data)\n    console.log(e)\n    console.log(e.target.elements)\n    console.log(Date())\n  }\n\n  weatherDataRender = (data?: any) => {\n    // weatherData = data\n    this.setState({ weatherDataTest: data })\n    // console.log(weatherData)\n  }\n\n  sendPrev = (data?:any) => {\n    this.setState({ weatherDataPrev: data })\n  }\n\n  render () {\n    return (\n      <div className=\"App\">\n        <div className=\"App__wrapper\">\n          <header className=\"header\">\n            <div className=\"heade__title-body\">\n              <h1 className=\"header__h1 header__h1--direction--left\">Weather</h1>\n              <h1 className=\"header__h1 header__h1--direction--right\">forecast</h1>\n            </div>\n          </header>\n          <main className=\"main\">\n            <div className=\"main__body\">\n              <div className=\"main__item-container\">\n                <div className=\"item-main\">\n                  <div className=\"item-main__wrapper\">\n                    <h2 className=\"item-main__title\">7 Days Forecast</h2>\n                    <div className=\"item-main__form\">\n                      <CityForm city='Select city' test={this.weatherDataRender}/>\n                    </div>\n                    <div className=\"item-main__output-container\">\n                      <MainOutput weatherProp={this.state.weatherDataTest}/>\n                    </div>\n                  </div>\n                </div>\n              </div>\n              <div className=\"main__item-container\">\n                <div className=\"item-main\">\n                  <div className=\"item-main__wrapper\">\n                    <h2 className=\"item-main__title\">Forecast for a Date in the Past</h2>\n                    <div className=\"item-main__form\">\n                     <CityDateForm city='Select city' sendPrev={this.sendPrev}/>\n                    </div>\n                    <div className=\"item-main__output-container\">\n                      <MainOutputPast weatherProp={this.state.weatherDataPrev}/>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </main>\n          <footer className=\"footer\">\n            <h6 className=\"footer__text\">C ЛЮБОВЬЮ ОТ MERCURY DEVELOPMENT</h6>\n          </footer>\n        </div>\n      </div>\n    )\n  }\n}\nexport default App\n","import { ReportHandler } from 'web-vitals'\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry)\n      getFID(onPerfEntry)\n      getFCP(onPerfEntry)\n      getLCP(onPerfEntry)\n      getTTFB(onPerfEntry)\n    })\n  }\n}\n\nexport default reportWebVitals\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport reportWebVitals from './reportWebVitals'\nimport './assets/Fonts/fonts.css'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}